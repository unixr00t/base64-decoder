
#!/usr/bin/python
import base64
import ast
import urllib


#for python3 use below code
#myData = input ("Enter data for decode =")
#urlDecode = urllib.parse.unquote_plus(myData)

myData = raw_input("\nEnter data for decode = \n")
urlDecode = urllib.unquote(myData).decode('utf8')
firstDecode = base64.b64decode(urlDecode) 
print ("------------------------result of first decode--------------------------\n")
print ("The result is \t:\n" +firstDecode)
print ("\n------------------------end of first decode  result---------------------\n")

data1 = ast.literal_eval(firstDecode)
bodys = str(data1.get('bodys', 0))
sign  = str(data1.get('sign', 0))
secondDecode = base64.b64decode(bodys)
print ("-------------------------result of second decode------------------------\n")
print ("sign \t:\t" +sign)
print ("bodys\t:\t" +secondDecode)
print ("\n-------------------------end of second decode result--------------------\n")

data2 = ast.literal_eval(secondDecode)
timestamp = str(data2.get('timestamp', 0))
nonceStr = str(data2.get('nonceStr', 0))
signType = str(data2.get('signType', 0))
jsonData = str(data2.get('jsonData', 0))
jsonBase = str(data2.get('jsonBase', 0))
thirdDecode1 = base64.b64decode(jsonData)
thirdDecode2 = base64.b64decode(jsonBase)
print ("-------------------------result of third decode-------------------------\n")
print ("sign     \t:\t" +sign)
print ("timestamp\t:\t" +timestamp)
print ("nonceStr \t:\t" +nonceStr)
print ("signType \t:\t" +signType)
print ("jsonData\t:\t" +thirdDecode1)
print ("jsonBase\t:\t" +thirdDecode2)
print ("\n-------------------------end of third decode result---------------------\n")

data03 = ast.literal_eval(thirdDecode1)
data3 = ast.literal_eval(thirdDecode2)
jsonBaseData = str(data3.get('data', 0))
appid = str(data3.get('appid', 0))
key = str(data3.get('key', 0))
appappscrect = str(data3.get('appappscrect', 0))
statusCode = str(data03.get('statusCode', 0))
message = str(data03.get('message', 0))
iss = str(data03.get('iss', 0))
jti = str(data03.get('jti', 0))
iat = str(data03.get('iat', 0))
fourthDecode = base64.b64decode(jsonBaseData)
print ("-------------------------result of fourth decode------------------------\n")
print ("sign      \t:\t" +sign)
print ("timestamp \t:\t" +timestamp)
print ("nonceStr  \t:\t" +nonceStr)
print ("signType  \t:\t" +signType)
print ("statusCode\t:\t" +statusCode)
print ("message   \t:\t" + message)
print ("iss       \t:\t" +iss)
print ("jti       \t:\t" +jti)
print ("iat       \t:\t" +iat)
print ("data      \t:\t" +fourthDecode)
print ("\n-------------------------end of fourth decode result--------------------\n")


data4 = ast.literal_eval(fourthDecode)
requestType = str(data4.get('requestType', 0))
deviceNumber = str(data4.get('deviceNumber', 0))
function = str(data4.get('function', 0))
account = str(data4.get('account', 0))
parameter = str(data4.get('parameter', 0))


fifthDecode1 = base64.b64decode(account)
fifthDecode2 = base64.b64decode(parameter)
#fifthDecode2 = base64.b64decode(parameter)

print ("-------------------------result of fifth decode-------------------------\n")
print ("sign        \t:\t" +sign)
print ("timestamp   \t:\t" +timestamp)
print ("nonceStr    \t:\t" +nonceStr)
print ("signType    \t:\t" +signType)
print ("statusCode  \t:\t" +statusCode)
print ("message     \t:\t" + message)
print ("iss         \t:\t" +iss)
print ("jti         \t:\t" +jti)
print ("iat         \t:\t" +iat)
print ("requestType \t:\t" +requestType)
print ("account     \t:\t" +account)
print ("parameter   \t:\t" +fifthDecode2)
print ("deviceNumber\t:\t" +deviceNumber)
print ("function    \t:\t" +function)
print ("appid       \t:\t" +appid)
print ("key         \t:\t" +key)
print ("appappscrect\t:\t" +appappscrect)
print ("\n-------------------------end of fifth decode result---------------------\n")
print ("-------------------------end of program---------------------------------")
